# =======================
# beem configuration file
# =======================

# Sqlite3 database file.
db_file = "beem_data.db3"


# =========================
# === DCSS IRC settings ===
[dcss]

# IRC hostname and port. IRC port. If not using ssl, use the default IRC port.
hostname = "irc.freenode.net"
port = 6667

# Set to true to enable SSL support, and change the port field to an
# ssl-enabled port.
# use_ssl = true
# port = 6697

# If you register the nick used for your bot on Freenode, define username and
# password to have the bot log in with SASL. When using SASL, for security
# reasons you probably want to set `use_ssl = true' above to enable SSL
# support.
# username = ""
# password = ""

# A unique IRC nick is required. If SASL is used, this can be different from
# the username.
nick = ""

# Chat messages matching these regular expressions anywhere in the message will
# not be passed on to any IRC bot. You can add regular expression patterns to
# this array to prevent users from running certain commands.
# bad_patterns = []

# Generally you won't want to change any of the remaining settings in the
# dcss table, unless you want to different IRC bots from the official ones.

[[dcss.bots]]
nick = "Sequell"
# These are regular expression patterns the bot accepts as prefixes to Sequell
# commands in chat. A chat message must match one of these at to be forwarded
# to Sequell.
sequell_patterns = ['^\?\?', '(?i)^[qr]\?\?', '[^?]\?\?\??\s*$', '^\?/',
		    '^[!&.=][\S]+', '(?i)^rip\b', '(?i)\bgong\b', '(?i)^cang$',
                    '^(?i)You die...']

[[dcss.bots]]
nick = "Gretell"
# Like sequell_patterns above, except for the DCSS monster lookup.
monster_patterns = ['^@\?']

[[dcss.bots]]
nick = "Cheibriados"
monster_patterns = ['^%([0-9]+\.[0-9]+)?\?']
# Like sequell_patterns above, except for the git lookup of DCSS source code.
git_patterns = ['^%git']


# =========================
# === WebTiles settings ===
[webtiles]

# The WebTiles login the bot will use. This shouldn't be your own WebTiles
# account, since then the bot will ignore messages from you.
# username = ""
# password = ""

# List of usernames that are considered bot admins. These are allowed to run
# admin-only bot commands and to target other users for these commands using
# the ^name syntax.
# admins = []

# Usernames in this list will not be able to execute any kind of command
# through the bot.
# ignored_users = []

# The websocket url of the server to watch at startup.
server_url = "ws://localhost:8080/socket"

# Set this to 2 if the server is using the webtiles-changes branch.
protocol_version = 1

# To enable single user mode, set this field to a valid user name. The bot will
# only watch the games of this user.
# watch_player = ""

# The variables command_limit and command_period control the rate of commands
# (both bot and dcss) allowed in chat. If the condition is reached where the
# number of commands sent in the last 'command_period' seconds reaches
# 'command_limit', subsequent commands are ignored until that condition is no
# longer true.
command_limit = 8
command_period = 20

# Send when users issue !<bot-name> help
help_text = """I'm a bot that sends commands to the DCSS IRC knowledge
bots. For details, see
https://github.com/floraline/beem/blob/master/docs/commands.md and to have me
watch your games on this server, type: !subscribe"""

# The WebTiles settings below are only relevant if not using watch_player

# Maximum number of subscribers the bot will watch on a server when not in
# single user mode. This number is independent of connection reserved for the
# autowatch feature.
max_watched_subscribers = 50

# Max time in seconds a game can be idle before the bot will refuse to spectate
# a game or leave a game it is watching. This shouldn't be too low or a game
# will lose its watch slot too easily, nor too high so that a game that's idle
# a long time hogs a connection that does nothing.
max_game_idle = 3600

# Max time in seconds to wait after a game ends before removing it from the
# watch queue. A user that rejoins before this period end won't lose their
# designated slot.
game_rewatch_timeout = 30

# Set this to true to have the bot use a dedicated connection to watch the most
# spectated non-idle game on the server. Note the connection used is
# independent of the limit in `max_watched_subscribers' above.
# autowatch_enabled = true

# The minimum spectators required for the bot to consider autowatching to a
# game.
min_autowatch_spectators = 3

# If autowatch is enabled and this variable is defined, give a greeting
# message when the bot first autowatches to a game. In this string, %n is
# replaced with the bot name.
greeting_text = "I am %n. For help, type: !%n"


# =============================
# === Logging Configuration ===
[logging_config]

# When filename isn't defined, stdout is used.
# filename = "beem.log"

# Limits for the logger when writing to a file. When the limit is reached, a
# backup file is made up to as many as in 'backup_count'
# max_bytes = 10000000
# backup_count = 5

# Log message format
datefmt = "%Y-%m-%d %H:%M:%S"
format = "%(asctime)s %(levelname)s: %(message)s"

# Set to 10 to get debugging message, but be warned this generates
# huge amounts of output.
# 10 = DEBUG, 20 = INFO, 30 = WARNING, ERROR = 40, CRITICAL = 50
level = 20
